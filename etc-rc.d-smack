#! /bin/bash
#
# Copyright (C) 2007 Casey Schaufler <casey@schaufler-ca.com>
# Copyright (C) 2011 Nokia Corporation.
# Copyright (c) 2011 Intel Corporation
#
#      This program is free software; you can redistribute it and/or modify
#      it under the terms of the GNU General Public License as published by
#      the Free Software Foundation, version 2.
#
#      This program is distributed in the hope that it will be useful, but
#      WITHOUT ANY WARRANTY; without even the implied warranty of
#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#      General Public License for more details.
#
#      You should have received a copy of the GNU General Public
#      License along with this program; if not, write to the Free Software
#      Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
#      02110-1301 USA
#
# Authors:
#      Casey Schaufler <casey@schaufler-ca.com>
#
# chkconfig: 2345 08 08
# description: Initialize Smack configuration
### BEGIN INIT INFO
# Provides: smack
# Required-Start: $local_fs
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Set up Smack configuration
# Description: Smack is an implementation of Mandatory Access Control. \
#              The access control rules are loaded using the smackfs \
#              pseudo-filesystem.
### END INIT INFO

#. /etc/rc.conf
# . /etc/conf.d/smack
#. /etc/rc.d/functions

# 
# Ensure the general availability of /dev/null, /dev/zero, and /tmp
#
label_devices() {
	/bin/chsmack --access='*' /dev/null /dev/zero /tmp >& /dev/null
}

#
# Make sure that /smack is mounted
# Ensure that the mount point is a directory
#
mount_smack() {
	if [ ! -d /smack ] ; then
		if [ -e /smack ] ; then
			rm -f /smack
		fi
		mkdir /smack
	fi

	mount smackfs -t smackfs /smack >& /dev/null
}

#
# Load any Smack access rules
#
load_rules() {
	if [ -f /etc/smack/accesses ] ; then
		/sbin/smackload < /etc/smack/accesses
	fi
	if [ -d /etc/smack/accesses.d ] ; then
		ENTRIES=`ls /etc/smack/accesses.d`
		if [ "$ENTRIES""x" != "x" ] ; then
			/sbin/smackload /etc/smack/accesses.d/*
		fi
	fi
}

#
# Unload any Smack access rules
#

unload_rules() {
	/sbin/smackload -c < /smack/load
}

#
# Load any Smack CIPSO mappings
#
load_cipso() {
	if [ -f /etc/smack/cipso ] ; then
		/sbin/smackcipso < /etc/smack/cipso
	fi
	if [ -d /etc/smack/cipso.d ] ; then
		/sbin/smackcipso /etc/smack/cipso.d/*
	fi
}

#
# Load netlabel
#

load_netlabel() {
	if [ -f /etc/smack/netlabel ] ; then
		( while read line; do
			echo "$line" > /smack/netlabel
		done ) < /etc/smack/netlabel
	fi
}

case "$1" in
   start)
	label_devices
	mount_smack
	load_rules
	load_cipso
	load_netlabel
	;;
   status)
	if [ ! -e /smack/load ] ; then
		exit 4
	fi
	;;
   reload|force-reload|restart|try-restart)
	unload_rules
	label_devices
	load_rules
	load_cipso
	load_netlabel
	;;
   stop)
	unload_rules
	;;
   *)
   	echo "Usage: $0 {start|status|reload|stop}"
	;;
esac

exit 0
